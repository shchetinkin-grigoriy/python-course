# Task 1
'''Реализовать функцию, принимающую два числа (позиционные аргументы)
и выполняющую их деление. Числа запрашивать у пользователя,
предусмотреть обработку ситуации деления на ноль.'''


def my_div(num_1, num_2):
    try:
        num_1, num_2 = float(num_1), float(num_2)
        answer = num_1 / num_2
    except ValueError:
        return 'Ошибка числа'
    except ZeroDivisionError:
        return 'Деление на ноль!'
    return answer


# Task 2
'''Реализовать функцию, принимающую несколько параметров,
описывающих данные пользователя: имя, фамилия, год рождения,
город проживания, email, телефон. Функция должна принимать
параметры как именованные аргументы. Реализовать вывод
данных о пользователе одной строкой.'''


def personal_info(**kwargs):
    return kwargs


print(personal_info(
    name=input('Имя: '),
    surname=input('Фамилия: '),
    bitrhday=input('ДР: '),
    city=input('Город: '),
    email=input('Почта: '),
    phone=input('Телефон: '),
))

# Task 3
'''Реализовать функцию my_func(), которая принимает
три позиционных аргумента, и возвращает сумму 
наибольших двух аргументов.'''


def my_func(num_1, nim_2, num_3):
    try:
        my_list = [num_1, nim_2, num_3]
        my_list.pop(my_list.index(min(my_list)))
        return sum(my_list)
    except TypeError:
        return 'Check number'


print(my_func(1, 2, 3))

# Task 4
'''Программа принимает действительное положительное 
число x и целое отрицательное число y. Необходимо 
выполнить возведение числа x в степень y. Задание 
необходимо реализовать в виде функции my_func(x, y). 
При решении задания необходимо обойтись без 
встроенной функции возведения числа в степень.
Подсказка: попробуйте решить задачу двумя способами. 
Первый — возведение в степень с помощью оператора *. 
Второй — более сложная реализация без оператора *, 
предусматривающая использование цикла.'''


def my_pow_func(x, y):
    try:
        ans = x ** y
    except TypeError:
        return 'Enter float'
    return ans


print(my_pow_func(10, -2))


# второй вариант
def my_pow_func(x, y):
    # y - целое отрицательное
    try:
        x, y = float(x), int(y)
        res = x
        for i in range(abs(y) - 1):
            res *= x
        return 1 / res
    except ValueError:
        return 'Check value'


# Task 5
'''Программа запрашивает у пользователя строку чисел, 
разделенных пробелом. При нажатии Enter должна выводиться 
сумма чисел. Пользователь может продолжить ввод чисел, 
разделенных пробелом и снова нажать Enter. Сумма вновь 
введенных чисел будет добавляться к уже подсчитанной сумме. 
Но если вместо числа вводится специальный символ, выполнение 
программы завершается. Если специальный символ введен после 
нескольких чисел, то вначале нужно добавить сумму этих чисел 
к полученной ранее сумме и после этого завершить программу.'''


def summary():
    ex = False
    result = 0
    while ex == False:
        numbers = input('Enter numbers or q to exit: ').split()
        res_line = 0
        for num in numbers:
            if 'q' in num:
                ex = True
                break
            else:
                res_line += int(num)
        result += res_line
    print(result)


# Task 6
'''Реализовать функцию int_func(), принимающую слово 
из маленьких латинских букв и возвращающую его же, 
но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.

Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки,
но каждое слово должно начинаться с заглавной буквы. 
Необходимо использовать написанную ранее функцию int_func().'''


def int_func(text):
    return text.title()


print(int_func('text'))

res_int_func = int_func('text bla text')
print(res_int_func)
